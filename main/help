-------------------------------------------------------------------------------
# Minishell Developer's Guide:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Hello there, fellow developer! Welcome to Minishell, a minimalistic shell
# program & that I've created. In this guide, I'll provide you with insights
# into the key features and functionalities of Minishell:
#
# 1. Prompt and Command Input
#   Minishell presents a prompt and patiently awaits your command input.
#
# 2. Command History
#   It's got a handy command history feature that allows you to access
#   previously executed commands.
#
# 3. Command Execution
#   Minishell shines when it comes to executing commands. It intelligently
#   searches for and runs the right executable. It does so by utilizing the
#   PATH environment variable or accepting a relative or absolute path.
#
# 4. Quoting and Special Characters
#   We've taken care of the tricky parts for you. Minishell doesn't interpret
#   unclosed quotes or unrequested special characters, such as backslashes or
#   semicolons.
#
# 5. Single Quotes ('')
#   You'll be pleased to know that Minishell handles single quotes, ensuring
#   that metacharacters within the quoted sequence are not misinterpreted.
#
# 6. Double Quotes ("")
#   For double quotes, Minishell keeps things safe by preventing metacharacters
#   within the quoted sequence from causing trouble. The only exception is the
#   dollar sign ($).
#
# 7. File Redirections
#   When it comes to file redirection, Minishell offers all the essentials:
#   - '<' for input redirection.
#   - '>' for output redirection.
#   - '<<' for reading input until a delimiter is encountered.
#   - '>>' for appending output to a file.
#
# 8. Pipes (|)
#   Minishell doesn't miss a beat when it comes to pipes.
#   It connects theoutput of one command to the input of the next.
#
# 9. Environment Variables
#   If you need to work with environment variables (you know, the ones
#   with a '$' followed by a sequence of characters), Minishell handles their
#   substitution with ease.
#
# 10. '$?' Placeholder
#    Minishell manages the '$?' placeholder, which gets replaced with the
#    exit status of the last foreground pipeline.
#
# 11. Signal Handling
#    Let's talk signals. Minishell has got you covered:
#    - ctrl-C displays a new prompt on a new line.
#    - ctrl-D gracefully exits the shell.
#    - ctrl-\ doesn't do much, just as expected.
#
# 12. Built-in Commands
#    Minishell is interactive,
#     and that's why it offers some handy built-in commands:
#
#    - 'echo' with the '-n' option.
#    - 'cd' for navigating directories with a relative or absolute path.
#    - 'pwd' for a quick look at the current directory.
#    - 'export' for managing environment variables.
#    - 'unset' for removing environment variables.
#    - 'env' to display environment variables.
#    - 'exit' to gracefully exit Minishell.
#
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Feel free to explore more about each feature, and if you need in-depth
# information about specific commands, you can always type 'man <command>'
# to get the details or 'help cmd' to get a list of some available command
#
# I hope this guide helps you navigate Minishell with ease. Happy shell scripting!
#
-------------------------------------------------------------------------------

